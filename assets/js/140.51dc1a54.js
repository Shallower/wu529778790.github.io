(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{635:function(t,a,v){"use strict";v.r(a);var r=v(17),_=Object(r.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"考察的重点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#考察的重点"}},[t._v("#")]),t._v(" 考察的重点")]),t._v(" "),v("ul",[v("li",[t._v("算法的时间复杂度和空间复杂度")]),t._v(" "),v("li",[t._v("三大算法思维：贪心，二分，动态规划")]),t._v(" "),v("li",[t._v("常见数据结构")])]),t._v(" "),v("h2",{attrs:{id:"算法复杂度"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算法复杂度"}},[t._v("#")]),t._v(" 算法复杂度")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://gcore.jsdelivr.net/gh/wu529778790/image/blog/20230103222925.png",alt:"20230103222925"}})]),t._v(" "),v("h3",{attrs:{id:"什么是复杂度"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是复杂度"}},[t._v("#")]),t._v(" 什么是复杂度")]),t._v(" "),v("ul",[v("li",[t._v("程序执行时需要的计算量和内存空间(和代码是否简洁无关)")]),t._v(" "),v("li",[t._v("复杂度是数量级(方便记忆、推广)，不是具体的数字")]),t._v(" "),v("li",[t._v("一般针对一个具体的算法，而非一个完整的系统")])]),t._v(" "),v("h3",{attrs:{id:"时间复杂度-程序执行时需要的计算量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#时间复杂度-程序执行时需要的计算量"}},[t._v("#")]),t._v(" 时间复杂度(程序执行时需要的计算量)")]),t._v(" "),v("ul",[v("li",[t._v("O(1)一次就够(数量级)")]),t._v(" "),v("li",[t._v("O(n)和传输的数据量一样(数量级)")]),t._v(" "),v("li",[t._v("O(n^2)数据量的平方(数量级) 例如：两个for循环")]),t._v(" "),v("li",[t._v("O(logn)数据量的对数(数量级) 例如：二分法")]),t._v(" "),v("li",[t._v("O(n*logn)数据量数据量的对数(数量级) 一个for循环，一个二分法")])]),t._v(" "),v("h3",{attrs:{id:"空间复杂度-程序执行时需要的内存空间"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#空间复杂度-程序执行时需要的内存空间"}},[t._v("#")]),t._v(" 空间复杂度(程序执行时需要的内存空间)")]),t._v(" "),v("ul",[v("li",[t._v("O(1)有限的、可数的空间(数量级")]),t._v(" "),v("li",[t._v("o(n)和输入的数据量相同的空间(数量级)")])])])}),[],!1,null,null,null);a.default=_.exports}}]);